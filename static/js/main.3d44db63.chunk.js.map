{"version":3,"sources":["reducers/createSum.js","components/CalcButton.jsx","actions/AC.js","actions/add.js","actions/sub.js","actions/mul.js","actions/div.js","actions/afterOP.js","actions/oneOperand.js","actions/altOperator.js","actions/makeNeg2.js","actions/makeNeg1.js","actions/altNum2.js","actions/altNum1.js","components/CalcButtons.jsx","components/CalcDisplay.jsx","components/App.jsx","reducers/operation.js","reducers/index.js","index.js"],"names":["createSum","state","num1","operator","num2","action","stateClone","totalText","type","length","payload","substr","ans","eval","toString","num1Done","CalcButton","props","dispatch","useDispatch","useSelector","symbol","onClick","className","add","sub","mul","div","num","altNum1","CalcButtons","createButtons","bind","buttonLayout","buttons","i","map","this","React","Component","CalcDisplay","operation","id","App","operationReducer","console","log","Number","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d44db63.chunk.js","sourcesContent":["const createSum = (state = {num1: \"\", operator: \"\", num2: \"\"}, action) => {\r\n    const stateClone = state;\r\n    const totalText = state.num1 + state.operator + state.num2;\r\n    switch(action.type) {\r\n        case \"altNum1\":\r\n            if(totalText.length < 40) {\r\n                stateClone.num1 += action.payload;\r\n                return state = stateClone;\r\n            } else {\r\n                return state;\r\n            }\r\n        case \"altOperator\":\r\n            stateClone.operator = action.payload;\r\n            return state = stateClone;\r\n        case \"altNum2\":\r\n            if(totalText.length < 40) {\r\n                stateClone.num2 += action.payload;\r\n                return state = stateClone;\r\n            } else {\r\n                return state;\r\n            }\r\n        case \"makeNeg1\":\r\n            if(state.num1[0] !== \"-\") {\r\n                stateClone.num1 = `-${state.num1}`;\r\n                return state = stateClone;\r\n            } else {\r\n                stateClone.num1 = stateClone.num1.substr(1);\r\n                return state = stateClone;\r\n            }\r\n        case \"makeNeg2\":\r\n            if(state.num2[0] !== \"-\") {\r\n                stateClone.num2 = `-${state.num2}`;\r\n                return state = stateClone;\r\n            } else {\r\n                stateClone.num2 = stateClone.num2.substr(1);\r\n                return state = stateClone;\r\n            }\r\n        case \"AC\":\r\n            return state = {num1: \"\", operator: \"\", num2: \"\"};\r\n        case \"afterOP\":\r\n            const ans = eval(state.num1 + state.operator + state.num2); \r\n            if(ans === 0) {\r\n                return state = {num1: \"\", operator: \"\", num2: \"\"}\r\n            } else {\r\n                return state = {num1: ans.toString(), operator: \"\", num2: \"\"};\r\n            }\r\n        case \"oneOperand\":\r\n            return state = {num1: state.num1, operator: \"\", num2: \"\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default createSum;","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {altNum1} from \"../actions/altNum1\";\r\nimport {altNum2} from \"../actions/altNum2\";\r\nimport {add} from \"../actions/add\";\r\nimport {sub} from \"../actions/sub\";\r\nimport {mul} from \"../actions/mul\";\r\nimport {div} from \"../actions/div\";\r\nimport {AC} from \"../actions/AC\";\r\nimport {makeNeg1} from \"../actions/makeNeg1\";\r\nimport {makeNeg2} from \"../actions/makeNeg2\";\r\nimport {altOperator} from \"../actions/altOperator\";\r\nimport {afterOP} from \"../actions/afterOP\";\r\nimport {oneOperand} from \"../actions/oneOperand\";\r\n\r\nlet num1Done = false;\r\n\r\nfunction CalcButton(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const num1 = useSelector(state => state.createSum.num1);\r\n    const num2 = useSelector(state => state.createSum.num2);\r\n    const symbol = useSelector(state => state.createSum.operator);\r\n\r\n    function addNum() {\r\n        if(num1Done) {\r\n            dispatch(altNum2(props.symbol));\r\n        } else {\r\n            dispatch(altNum1(props.symbol));\r\n        }\r\n    }\r\n\r\n    function negateNum() {\r\n        if(num1Done) {\r\n            dispatch(makeNeg2(props.symbol));\r\n        } else {\r\n            dispatch(makeNeg1(props.symbol));\r\n        }\r\n    }\r\n\r\n    function addOp() {\r\n        dispatch(altOperator(props.symbol));\r\n        num1Done = true;\r\n    }\r\n\r\n    function performOp() {\r\n        if(num1 !== \"\" && num2 !== \"\") {\r\n            switch(symbol) {\r\n                case \"+\" :\r\n                    dispatch(add(num1, num2));\r\n                    break;\r\n                case \"-\" :\r\n                    dispatch(sub(num1, num2));\r\n                    break;\r\n                case \"*\" :\r\n                    dispatch(mul(num1, num2));\r\n                    break;\r\n                case \"/\" :\r\n                    dispatch(div(num1, num2));\r\n                    break;\r\n            }\r\n            dispatch(afterOP());\r\n            num1Done = false;\r\n        }\r\n        if(num1 !== \"\" && num2 === \"\") {\r\n            dispatch(oneOperand(num1));\r\n            num1Done = false;\r\n        }\r\n    }\r\n\r\n    function doAC() {\r\n        dispatch(AC());\r\n        num1Done = false;\r\n    }\r\n\r\n    if(props.symbol === \"AC\") {\r\n        return (\r\n            <button onClick={doAC} className=\"btn btn-elong\">{props.symbol}</button>\r\n        );\r\n    } else if(props.symbol === \"=\") {\r\n        return (\r\n            <button onClick={performOp} className=\"btn btn-elong\">{props.symbol}</button>\r\n        );\r\n    } else if(props.symbol === \"+\" || props.symbol === \"-\" || props.symbol === \"*\" || props.symbol === \"/\") {\r\n        if(num1Done === false && num1 !== \"\" && num1 !== \"-\") {\r\n            return (\r\n                <button onClick={addOp} className=\"btn\">{props.symbol}</button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button className=\"btn\">{props.symbol}</button>\r\n            );\r\n        }\r\n    } else if(props.symbol === \"+/-\") {\r\n        return (\r\n            <button onClick={negateNum} className=\"btn\">{props.symbol}</button>\r\n        );      \r\n    } else if(props.symbol === \"0\") {\r\n        if((num1 === \"\" || num1 === \"-\") && num1Done === false) {\r\n            return (\r\n                <button className=\"btn\">{props.symbol}</button>\r\n            );\r\n        }\r\n        if((num2 === \"\" || num2 === \"-\") && num1Done === true) {\r\n            return (\r\n                <button className=\"btn\">{props.symbol}</button>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        <button onClick={addNum} className=\"btn\">{props.symbol}</button>\r\n    );\r\n\r\n}\r\n\r\nexport default CalcButton;","export const AC = () => {\r\n    return {\r\n        type: \"AC\"\r\n    };\r\n}","export const add = (num1, num2) => {\r\n    return {\r\n        type: \"ADD\",\r\n        num1,\r\n        num2\r\n    };\r\n}","export const sub = (num1, num2) => {\r\n    return {\r\n        type: \"SUB\",\r\n        num1, \r\n        num2\r\n    };\r\n}","export const mul = (num1, num2) => {\r\n    return {\r\n        type: \"MUL\",\r\n        num1,\r\n        num2\r\n    };\r\n}","export const div = (num1, num2) => {\r\n    return {\r\n        type: \"DIV\",\r\n        num1,\r\n        num2\r\n    };\r\n}","export const afterOP = () => {\r\n    return {\r\n        type: \"afterOP\"\r\n    };\r\n}","export const oneOperand = (num) => {\r\n    return {\r\n        type: \"oneOperand\",\r\n        num\r\n    };\r\n}","export const altOperator = (payload) => {\r\n    return {\r\n        type: \"altOperator\",\r\n        payload\r\n    };\r\n}","export const makeNeg2 = () => {\r\n    return {\r\n        type: \"makeNeg2\"\r\n    };\r\n}","export const makeNeg1 = () => {\r\n    return {\r\n        type: \"makeNeg1\"\r\n    };\r\n}","export const altNum2 = (payload) => {\r\n    return {\r\n        type: \"altNum2\",\r\n        payload\r\n    };\r\n}","export const altNum1 = (payload) => {\r\n    return {\r\n        type: \"altNum1\",\r\n        payload\r\n    };\r\n}","import React from \"react\";\r\n// import {useSelector, useDispatch} from \"react-redux\";\r\n\r\nimport CalcButton from \"./CalcButton\";\r\n\r\nclass CalcButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.createButtons = this.createButtons.bind(this);\r\n    }\r\n\r\n    createButtons() {\r\n        const buttonLayout = [[\"7\", \"8\", \"9\", \"AC\"],\r\n                              [\"4\", \"5\", \"6\", \"+\", \"-\"],\r\n                              [\"1\", \"2\", \"3\", \"*\", \"/\"],\r\n                              [\".\", \"0\", \"+/-\", \"=\"]];\r\n\r\n        const buttons = [[]];\r\n\r\n        for(let i = 0; i < buttonLayout.length; i++) {\r\n            buttons[i] = buttonLayout[i].map(function(symbol) {\r\n                return <CalcButton symbol={symbol}/>; \r\n            });\r\n        }\r\n\r\n        return buttons;\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.createButtons();\r\n\r\n        return (\r\n            <div>\r\n                {buttons[0]}\r\n                <br/>\r\n                {buttons[1]}\r\n                <br/>\r\n                {buttons[2]}\r\n                <br/>\r\n                {buttons[3]}\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalcButtons;","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\nfunction CalcDisplay(props) {\r\n    const num1 = useSelector(state => state.createSum.num1);\r\n    const num2 = useSelector(state => state.createSum.num2);\r\n    const symbol = useSelector(state => state.createSum.operator);\r\n    const ans = useSelector(state => state.operation);\r\n\r\n    return(\r\n        <div id=\"calc-display\">\r\n            <p id=\"calc-text-top\">{`${num1}${symbol}${num2}`}</p>\r\n            <p id=\"calc-text-bot\">{ans}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalcDisplay;","import React from \"react\";\r\n// import {useSelector, useDispatch} from \"react-redux\";\r\nimport CalcButtons from \"./CalcButtons\";\r\nimport CalcDisplay from \"./CalcDisplay\";\r\n\r\nclass App extends React.Component {\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app\">\r\n                <div id=\"calculator\">\r\n                    <CalcDisplay/>\r\n                    <CalcButtons/>\r\n                </div>\r\n                <p id=\"subtext\">React-Redux Calculator, by Timofey Cvetkov</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import { oneOperand } from \"../actions/oneOperand\";\r\n\r\nconst operationReducer = (state = 0, action) => {\r\n    console.log(state);\r\n    switch(action.type) {\r\n        case \"ADD\":\r\n            return state = Number(action.num1) + Number(action.num2);\r\n        case \"SUB\":\r\n            return state = Number(action.num1) - Number(action.num2);\r\n        case \"MUL\":\r\n            return state = Number(action.num1) * Number(action.num2);\r\n        case \"DIV\":\r\n            return state = Number(action.num1) / Number(action.num2);\r\n        case \"AC\":\r\n            return state = 0;\r\n        case \"oneOperand\":\r\n            return state = Number(action.num);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default operationReducer;","import operation from \"./operation\";\r\nimport createSum from \"./createSum\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    operation,\r\n    createSum\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport App from \"./components/App.jsx\";\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}